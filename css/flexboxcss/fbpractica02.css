*, *::before, *::after{
    box-sizing: inherit;
}

html {
    /* Esta propiedad resta el border y el pading del Box Model teniendo With y heigt el total */
    /* Si no se coloca cuando se agrega pading o border el tamano de la caja aumento */
    /* El margen esta afuera esto no va dentro de la caja */
    box-sizing: border-box;
}

html,body {
    width: 100%;
    height: 100%;
}


body{
    background-color: lightgray;
    font-family: sans-serif;
    margin: 0;
    padding: 0;
}
.contenedor {
    border: 20px solid white;
    display: flex;
    font-size: 20px;
    /*  */
    /* flex-direction: row-reverse; */
     /* flex-direction: row;  */
    /* flex-direction: row; */
    /* flex-direction: column; */
    /* Este permite que los Item colapcen hay que agregar un width al Item */
    /* flex-wrap: wrap-reverse; */
    /* height: 500px; */
    height: 50vh;
    /* flex-wrap: wrap;  */ 
    flex-direction: row; 
}

div[class*="item-"]{

    background-color: orange;
    padding: 10px;
    text-align: center;
    border: 2px solid gray;
    
    /* Para usar el wrap en el contenedor y los Items se distribuyan hacia abajo */
    /* width: 300px; */
    /* Si el ancho es mayor igual el contenedor forzara las cajas a que quepan en la */
    /* width: 500px; */

    /* En este caso forza a que el contenido ocupe todo el espacio disponible y el tamano de la caja se adecua  */
    /* flex: 1; factor de crecimiento*/
     /* flex-grow:1;  */
    /* flex-wrap: wrap; */

    /* El alto sera el 50% de la vista disponible */
    /* height: 100px; */
     /* height: 300px; */

     /* Video 6 */

     flex-grow: 1;
}


div[class*="item-"]:nth-child(3){
    background-color: orange;
    padding: 10px;
    text-align: center;
    border: 2px solid gray;
    /* flex-grow: 5; */
}

div[class*="item-"]:nth-child(odd){
    background-color: black;
    color: white;
    /* flex: 0.5; es lo mismo que flex-grow*/
}


/* Propiedad de order de los item con flex box */
/* Se pueden usar nuemros negativos y positivos por defecto es cero(0) */
/* 
div[class*="item-"]:nth-child(5){
    background-color: red;
    order:1;
}

div[class*="item-"]:nth-child(7){
    background-color: green;
    order:2;

    
}

/* Esto solo ocurre cuando el tamano de la pantalla es menor a 768px */
/*
@media (max-width: 768px){
    div[class*="item-"]:nth-child(9){
        background-color: rgb(102, 128, 0);
        order:2;
    }
} */


/* Main axis horizontal eje x */
/* Cros axis Vertical eje y */
/* Video 6 justify-content*/
.contenedor {

    flex-direction: row; 
    /* Alinea en el eje horizontal */
    /* justify-content: center; */
    /* Valor por defecto se alinea al inicio */
    /* justify-content: flex-start; */
    /* justify-content: flex-end; */
    /* justify-content: space-around; */
    /*  justify-content: space-between; */
    
}

.contenedor6 {
    border: 20px solid white;
    display: flex;
    font-size: 20px;
    /* width:  20vh; */
    flex-direction: column; 
    height: 50vh;
    /* justify-content: center; */
    flex-wrap: wrap; 
}







/* Cros axis Vertical eje y */
/* Video 7 justify-content*/
/* .contenedor {
    flex-direction: row; 
    /* justify-content: center; */
    /* align-items: center; */
    /* align-items: flex-start; */
    /* align-items: flex-end; */
    /* align-items: stretch; */
    /* align-items:baseline; */
/* }  */
/* 
div[class*="item-"]:nth-child(7){
    background-color: green;
    font-size: 40px;    
}
div[class*="item-"]:nth-child(5){
    background-color: green;
    font-size: 50px;    
}
div[class*="item-"]:nth-child(8){
    background-color: green;
    font-size: 50px;  
    height: 200px;  
} */


/* Cros axis Vertical eje y */
/* Video 8 align-self*/
.contenedor { 
    flex-direction: row; 
    /* justify-content: center; */
    align-items: center;
   
}  
div[class*="item-"]:nth-child(7){
    background-color: aqua;
    color: blue;  
    /* align-self: flex-end;   */
    /* align-self: center;   */
    /* align-self: stretch;   */
    align-self: baseline;  
   
}


/* Video 9 flex*/
/* flex (flex-grow) */
.contenedor {
    flex-direction: row; 
    justify-content: flex-start;
    
}
 
div[class*="item-"]:nth-child(7){
    align-self: center;  
}
